version: 2
jobs:
  build:
    working_directory: ~/ipfs
    docker:
      - image: nearform/circleci-node-ansible:1.0.3
    steps:
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@6'

      - restore_cache:
          key: dependency-runner-cache-{{ checksum "runner/package.json" }}
      - run:
          name: npm-install-runner
          command: cd runner && npm install
      - save_cache:
          key: dependency-runner-cache-{{ checksum "runner/package.json" }}
          paths:
            - ./runner/node_modules

      - restore_cache:
          key: dependency-benchmark-cache-{{ checksum "tests/package.json" }}
      - run:
          name: npm-install-benchmarks
          command: cd tests && npm install
      - save_cache:
          key: dependency-benchmark-cache-{{ checksum "tests/package.json" }}
          paths:
            - ./tests/node_modules

      - run:
          name: test-benchmarks
          command: cd tests && NODE_ENV=test npm test
      - run:
          name: test-runner
          command: cd runner && NODE_ENV=test npm test
            # Persist the specified paths (workspace/echo-output) into the workspace for use in downstream job.
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: ~/ipfs
          # Must be relative path from root
          paths:
            - .
  deploy:
    working_directory: ~/ipfs
    docker:
      - image: nearform/circleci-node-ansible:1.0.3
    steps:
      - attach_workspace:
          at: ~/ipfs
      - run:
          name: get private key
          command: |
            mkdir ~/.ssh
            echo $IPFS_KEY | base64 -d > ~/.ssh/id_rsa_ipfs
            chmod 600 ~/.ssh/id_rsa_ipfs
      - run:
          name: deploy
          command: |
            ANSIBLE_HOST_KEY_CHECKING=False \
            ansible-playbook -i infrastructure/inventory/inventory.yaml \
            infrastructure/playbooks/controller.yaml \
            --skip-tags "prepare"
      - run:
          name: write deploy.txt to trigger benchmark host sync on first run after deploy
          command: |
            ssh -i  ~/.ssh/id_rsa_ipfs -o "StrictHostKeyChecking no" ubuntu@benchmarks.ipfs.team "echo $(date) > /data/ipfs-benchmarks/tests/deploy.txt"
      - run:
          name: schedule restart
          command: |
            curl -XPOST -H "x-ipfs-benchmarks-api-key: $APIKEY" -k https://benchmarks.ipfs.team/runner/restart

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master

