version: "3"
networks:
  default:
    external:
      name: my-bridge
services:
  influxdb:
    image: influxdb:1.7-alpine
    volumes:
      - /data/influxdb:/var/lib/influxdb
    ports:
      - "8086:8086"
    environment:
      INFLUXDB_DB: benchmarks
    # networks:
    #   - my_bridge
    restart: always
  grafana:
    image: grafana/grafana:latest
    ports:
     - "3000:3000"
    volumes:
      - /data/grafana:/var/lib/grafana
    depends_on:
      - influxdb
    links:
      - influxdb
    # networks:
    #   - my_bridge
    environment:
      GF_SERVER_ROOT_URL: https://benchmarks.ipfs.team
      GF_SECURITY_ADMIN_USER: ${GF_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_ADMIN_PASSWORD}
      GF_AUTH_ANONYMOUS_ENABLED: "true"
    restart: always
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    links:
      - grafana:graf
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - grafana
    # networks:
    #   - my_bridge
    restart: always
    command:
      - /bin/sh
      - -c
      - |
        ip -4 route list match 0/0 | awk '{print $$3" runner"}' >> /etc/hosts
        cat /etc/hosts
        exec nginx -g 'daemon off;'
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: always
    # networks:
    #   - my_bridge
